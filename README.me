# 🛸 Hand Gesture Controlled Drone Game (Unity + Python + MediaPipe)

This project is a Unity-based 3D drone simulator controlled using **real-time hand gestures** via webcam using **MediaPipe**. The user can switch between gesture control and keyboard control.

---

## 🎮 Features

- 🖐️ Hand gesture tracking using Python + MediaPipe
- 🚀 Smooth drone physics in Unity
- 🎮 Toggle between gesture and keyboard control
- 📦 One-click launch using `.bat` file for real-time Python + Unity communication

---

## 📂 Folder Structure

UnityProject/
├── Assets/
│ ├── Scripts/
│ ├── Scenes/
│ └── External/
│ └── Python/
│ └── main.exe # Compiled hand tracking server
├── ProjectSettings/
├── Packages/
├── .gitignore
└── README.md

yaml
Copy
Edit

---

## 🧠 How It Works

1. Unity launches `main.exe`, which:
   - Starts the webcam
   - Tracks hand gestures using MediaPipe
   - Sends JSON data to Unity over TCP socket (`127.0.0.1:5000`)
2. Unity reads gesture data and maps:
   - Horizontal motion → Yaw
   - Vertical motion → Pitch
   - Index finger gestures → Forward/Backward
3. Optional: Switch to keyboard mode in UI for testing or fallback.

---

## 🛠️ How to Run

1. **Build the game** in Unity (Windows standalone build).
2. Inside the Unity project, ensure `main.exe` exists at:

Assets/External/Python/main.exe

yaml
Copy
Edit

3. Double-click the provided `.bat` launcher (e.g., `LaunchGame.bat`) to:
- Start `main.exe`
- Start the Unity `.exe` build

---

## 🖥️ Keyboard Controls (Fallback)

| Action              | Key             |
|---------------------|-----------------|
| Move Forward        | `W`             |
| Move Backward       | `S`             |
| Ascend              | `Space`         |
| Descend             | `Left Ctrl`     |
| Roll Left / Right   | `A / D`         |
| Look                | Mouse movement  |

---

## 📦 Requirements (for building `main.exe`)

If you're compiling `main.py` yourself:

- Python 3.9 or 3.8
- `mediapipe==0.10.21`
- `opencv-python`
- `pyinstaller`

Then use:

```bash
pyinstaller --onefile --add-data "<path_to_modules>;mediapipe/modules" main.py